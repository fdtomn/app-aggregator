<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

	<modelVersion>4.0.0</modelVersion>

	<groupId>maven-bootstrap</groupId>
	<artifactId>app-aggregator</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>pom</packaging>

	<modules>
		<module>../app-common</module>
		<module>../app-jdbc</module>
		<module>../app-workflow</module>
		<module>../app-ws</module>
		<module>../app-web</module>
		<module>../commons-utils</module>
	</modules>

	<!-- 常量 -->
	<properties>
		<java.version>1.6</java.version>
		<junit.version>4.10</junit.version>
		<!-- web jar -->
		<servlet-api.version>2.4</servlet-api.version>
		<jsp-api.version>2.1</jsp-api.version>
		<jstl.version>1.2</jstl.version>

		<!-- <spring.version>3.2.8.RELEASE</spring.version> -->
		<spring.version>4.0.2.RELEASE</spring.version>
		<!-- webservice工具 -->
		<axis2.version>1.6.2</axis2.version>

		<cxf.version>2.5.3</cxf.version>
		<!-- <cxf.version>3.0.0</cxf.version> -->

		<oracle.version>11.2.0.4.0</oracle.version>
		<druid.version>1.0.10</druid.version>
		<mysql.version>5.1.34</mysql.version>

		<!-- log4j 日志 -->
		<log4j.version>1.2.16</log4j.version>
		<slf4j-log4j12>1.6.0</slf4j-log4j12>

		<!-- activiti -->
		<!-- <activiti.version>5.15.1</activiti.version> -->
		<activiti.version>5.16</activiti.version>

		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

	<!-- 远程仓库 -->
	<repositories>
		<repository>
			<id>jboss-cache</id>
			<name>jboss-cache</name>
			<url>http://repository.jboss.org/maven2</url>
		</repository>
		<repository>
			<id>mvnsearch</id>
			<name>mvnsearch Maven Repository</name>
			<url>http://www.mvnsearch.org/maven2</url>
		</repository>
		<repository>
			<id>ibiblio</id>
			<name>ibiblio Maven Repository</name>
			<url>http://www.ibiblio.org/maven2</url>
		</repository>
		<repository>
			<id>mirrors.ibiblio</id>
			<name>mirrors.ibiblio Maven Repository</name>
			<url>http://mirrors.ibiblio.org/pub/mirrors/maven2</url>
		</repository>
		<repository>
			<id>repo.springsource.org</id>
			<name>repo.springsource.org-releases</name>
			<url>http://repo.springsource.org/libs-milestone-local</url>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</repository>
	</repositories>

	<!-- 依赖管理 -->
	<dependencyManagement>

		<dependencies>
			<!-- 单元测试 -->
			<dependency>
				<groupId>junit</groupId>
				<artifactId>junit</artifactId>
				<version>${junit.version}</version>
				<scope>test</scope>
			</dependency>

			<!-- web start -->
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet-api.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>javax.servlet.jsp</groupId>
				<artifactId>jsp-api</artifactId>
				<version>${jsp-api.version}</version>
				<scope>provided</scope>
			</dependency>

			<dependency>
				<groupId>jstl</groupId>
				<artifactId>jstl</artifactId>
				<version>${jstl.version}</version>
			</dependency>
			<!-- web end -->

			<!-- spring start -->
			<!-- Core utilities used by other modules. Define this if you use Spring 
				Utility APIs (org.springframework.core.*/org.springframework.util.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-core</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Expression Language (depends on spring-core) Define this if you use 
				Spring Expression APIs (org.springframework.expression.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-expression</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Bean Factory and JavaBeans utilities (depends on spring-core) Define 
				this if you use Spring Bean APIs (org.springframework.beans.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-beans</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Aspect Oriented Programming (AOP) Framework (depends on spring-core, 
				spring-beans) Define this if you use Spring AOP APIs (org.springframework.aop.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-aop</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Application Context (depends on spring-core, spring-expression, spring-aop, 
				spring-beans) This is the central artifact for Spring's Dependency Injection 
				Container and is generally always defined -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Various Application Context utilities, including EhCache, JavaMail, 
				Quartz, and Freemarker integration Define this if you need any of these integrations -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-context-support</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Transaction Management Abstraction (depends on spring-core, spring-beans, 
				spring-aop, spring-context) Define this if you use Spring Transactions or 
				DAO Exception Hierarchy (org.springframework.transaction.*/org.springframework.dao.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-tx</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- JDBC Data Access Library (depends on spring-core, spring-beans, spring-context, 
				spring-tx) Define this if you use Spring's JdbcTemplate API (org.springframework.jdbc.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-jdbc</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Object-to-Relation-Mapping (ORM) integration with Hibernate, JPA, 
				and iBatis. (depends on spring-core, spring-beans, spring-context, spring-tx) 
				Define this if you need ORM (org.springframework.orm.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-orm</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Object-to-XML Mapping (OXM) abstraction and integration with JAXB, 
				JiBX, Castor, XStream, and XML Beans. (depends on spring-core, spring-beans, 
				spring-context) Define this if you need OXM (org.springframework.oxm.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-oxm</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Web application development utilities applicable to both Servlet 
				and Portlet Environments (depends on spring-core, spring-beans, spring-context) 
				Define this if you use Spring MVC, or wish to use Struts, JSF, or another 
				web framework with Spring (org.springframework.web.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-web</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Spring MVC for Servlet Environments (depends on spring-core, spring-beans, 
				spring-context, spring-web) Define this if you use Spring MVC with a Servlet 
				Container such as Apache Tomcat (org.springframework.web.servlet.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Spring MVC for Portlet Environments (depends on spring-core, spring-beans, 
				spring-context, spring-web) Define this if you use Spring MVC with a Portlet 
				Container (org.springframework.web.portlet.*) -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-webmvc-portlet</artifactId>
				<version>${spring.version}</version>
			</dependency>

			<!-- Support for testing Spring applications with tools such as JUnit 
				and TestNG This artifact is generally always defined with a 'test' scope 
				for the integration testing framework and unit testing stubs -->
			<dependency>
				<groupId>org.springframework</groupId>
				<artifactId>spring-test</artifactId>
				<version>${spring.version}</version>
				<scope>test</scope>
			</dependency>
			<!-- spring end -->

			<dependency>
				<groupId>oracle</groupId>
				<artifactId>oracle-connector-java</artifactId>
				<version>${oracle.version}</version>
			</dependency>

			<dependency>
				<groupId>mysql</groupId>
				<artifactId>mysql-connector-java</artifactId>
				<version>${mysql.version}</version>
			</dependency>

			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>${druid.version}</version>
			</dependency>

			<!-- axis2 start -->
			<dependency>
				<groupId>org.apache.axis2</groupId>
				<artifactId>axis2</artifactId>
				<version>${axis2.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.axis2</groupId>
				<artifactId>axis2-transport-http</artifactId>
				<version>${axis2.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.axis2</groupId>
				<artifactId>axis2-kernel</artifactId>
				<version>${axis2.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.axis2</groupId>
				<artifactId>axis2-transport-local</artifactId>
				<version>${axis2.version}</version>
			</dependency>

			<dependency>
				<groupId>org.apache.xmlbeans</groupId>
				<artifactId>xmlbeans</artifactId>
				<version>2.4.0</version>
			</dependency>

			<!-- 整合spring -->
			<dependency>
				<groupId>org.apache.axis2</groupId>
				<artifactId>axis2-spring</artifactId>
				<version>${axis2.version}</version>
			</dependency>
			<!-- axis2 end -->

			<!-- cxf start -->
			<!-- soap -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxws</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<!-- rest -->
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-frontend-jaxrs</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http</artifactId>
				<version>${cxf.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.cxf</groupId>
				<artifactId>cxf-rt-transports-http-jetty</artifactId>
				<version>${cxf.version}</version>
			</dependency>

			<!-- <dependency> <groupId>org.apache.cxf</groupId> <artifactId>cxf-bundle-jaxrs</artifactId> 
				<version>2.7.14</version> </dependency> -->


			<!-- 基于rest的jar -->
			<!-- <dependency> <groupId>javax.ws.rs</groupId> <artifactId>javax.ws.rs-api</artifactId> 
				<version>2.0</version> </dependency> -->
			<!-- cxf end -->


			<!-- log4j start -->
			<dependency>
				<groupId>log4j</groupId>
				<artifactId>log4j</artifactId>
				<version>${log4j.version}</version>
			</dependency>

			<dependency>
				<groupId>org.slf4j</groupId>
				<artifactId>slf4j-log4j12</artifactId>
				<version>${slf4j-log4j12}</version>
			</dependency>
			<!-- log4j end -->


			<!-- activiti start -->
			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-engine</artifactId>
				<version>${activiti.version}</version>
			</dependency>

			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-spring</artifactId>
				<version>${activiti.version}</version>
			</dependency>

			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-bpmn-model</artifactId>
				<version>${activiti.version}</version>
			</dependency>

			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-bpmn-converter</artifactId>
				<version>${activiti.version}</version>
			</dependency>

			<dependency>
				<groupId>org.activiti</groupId>
				<artifactId>activiti-process-validation</artifactId>
				<version>${activiti.version}</version>
			</dependency>
			<!-- activiti end -->

		</dependencies>

	</dependencyManagement>

	<build>
		<!-- 插件管理 -->
		<pluginManagement>
			<plugins>

				<!-- skip tests -->
				<!-- <plugin> <groupId>org.apache.maven.plugins</groupId> <artifactId>maven-surefire-plugin</artifactId> 
					<version>2.4.2</version> <configuration> <skipTests>true</skipTests> </configuration> 
					</plugin> -->

				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<configuration>
						<!-- 设置JDK 版本 -->
						<!-- 源码版本 -->
						<source>${java.version}</source>
						<!-- 目标版本 -->
						<target>${java.version}</target>
						<!-- 设置 编译编码 -->
						<encoding>${project.build.sourceEncoding}</encoding>
					</configuration>
				</plugin>

				<!-- jetty -->
				<plugin>
					<groupId>org.mortbay.jetty</groupId>
					<artifactId>maven-jetty-plugin</artifactId>
					<version>6.1.26</version>
					<configuration>
						<!-- <contextPath>/</contextPath> -->
						<scanIntervalSeconds>3</scanIntervalSeconds>
						<connectors>
							<connector implementation="org.mortbay.jetty.nio.SelectChannelConnector">
								<port>9090</port>
							</connector>
						</connectors>
						<scanTargetPatterns>
							<scanTargetPattern>
								<directory>src/main/webapp/WEB-INF</directory>
								<excludes>
									<exclude>**/*.jsp</exclude>
								</excludes>
								<includes>
									<include>**/*.properties</include>
									<include>**/*.xml</include>
								</includes>
							</scanTargetPattern>
						</scanTargetPatterns>
					</configuration>
				</plugin>

			</plugins>
		</pluginManagement>
	</build>

</project>